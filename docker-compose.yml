version: '3'

services:

  postgres:
    image: postgres
    container_name: pgsql-dev
    networks:
      - redarc
    env_file:
      - .env
    volumes:
      - pgredarc01:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-h",  "pgsql-dev", "-U", "postgres"]
      timeout: 10s
      retries: 10

  postgres_fts:
    image: postgres
    container_name: pgsql-fts
    networks:
      - redarc
    env_file:
      - .env
    volumes:
      - pgftsredarc01:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-h",  "pgsql-fts", "-U", "postgres"]
      timeout: 10s
      retries: 10

  redarc:
    build:
      context: .
      dockerfile: Dockerfile
    image: redarc
    container_name: redarc
    networks:
      - redarc
    env_file:
      - .env
    volumes:
      - redarc_api_logs:/redarc/api/logs
      - redarc_images:/ingest/gallery-dl
    ports:
      - "80:80"
    depends_on:
      postgres:
        condition: service_healthy
      postgres_fts:
        condition: service_healthy
      redis:
        condition: service_healthy

  redis:
    image: redis:7.0.12-alpine3.18
    container_name: redis
    networks:
      - redarc
    command: redis-server
    healthcheck:
      test: ["CMD", "redis-cli","ping"]
      timeout: 10s
      retries: 10

  image_downloader:
    build:
      context: ./ingest/image_downloader
      dockerfile: Dockerfile
    image: image_downloader
    container_name: image_downloader
    networks:
      - redarc
    env_file:
      - .env
    volumes:
      - redarc_ingest_logs:/image_downloader/logs
      - redarc_images:/image_downloader/gallery-dl
    depends_on:
      redis:
        condition: service_healthy

  index_worker:
    build:
      context: ./ingest/index_worker
      dockerfile: Dockerfile
    image: index_worker
    container_name: index_worker
    networks:
      - redarc
    env_file:
      - .env
    volumes:
      - redarc_ingest_logs:/index_worker/logs
    depends_on:
      postgres:
        condition: service_healthy
      postgres_fts:
        condition: service_healthy

  reddit_worker:
    build:
      context: ./ingest/reddit_worker
      dockerfile: Dockerfile
    image: reddit_worker
    container_name: reddit_worker
    networks:
      - redarc
    env_file:
      - .env
    volumes:
      - redarc_ingest_logs:/reddit_worker/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  subreddit_worker:
    build:
      context: ./ingest/subreddit_worker
      dockerfile: Dockerfile
    image: subreddit_worker
    container_name: subreddit_worker
    networks:
      - redarc
    env_file:
      - .env
    volumes:
      - redarc_ingest_logs:/subreddit_worker/logs
    depends_on:
      redis:
        condition: service_healthy

networks:
  redarc:
    driver: bridge
    name: redarc

volumes:
  pgredarc01:
    driver: local
  pgftsredarc01:
    driver: local
  redarc_ingest_logs:
    driver: local
  redarc_api_logs:
    driver: local
  redarc_images:
    driver: local